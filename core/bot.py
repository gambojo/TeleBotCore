from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from core.config import ConfigManager
from core.plugins import PluginManager
from core.middlewares import UserInitMiddleware
from core.handlers.start import StartHandler
from core.display import ImageManager
from modules.databases import DatabaseManager
from core.logging import LoggingManager
from core.version import VersionManager
from core.auth import AuthManager
from core.stats import StatsManager


class BotApp:
    """
    –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –±–æ—Ç–∞ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
    """
    def __init__(self):
        # 0Ô∏è‚É£ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ - –ü–ï–†–í–´–ú –¥–µ–ª–æ–º!
        self.logging_manager = LoggingManager()
        self.logger = self.logging_manager.get_logger(__name__)
        self.logger.info("LoggingManager was loaded")

        # 1Ô∏è‚É£ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        self.config = ConfigManager()
        self.logger.info("ConfigManager was loaded")

        # 2Ô∏è‚É£ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
        self.db = DatabaseManager(self.config.settings.DATABASE_URL)
        self.logger.info("DatabaseManager was loaded")

        # 3Ô∏è‚É£ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        self.images = ImageManager(use_local=True)
        self.logger.info("ImageManager was loaded")

        # 4Ô∏è‚É£ –ë–æ—Ç –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
        self.bot = Bot(token=self.config.settings.BOT_TOKEN,
                       default=DefaultBotProperties(parse_mode=ParseMode.HTML))
        self.dp = Dispatcher(storage=MemoryStorage())

        # 5Ô∏è‚É£ PluginManager
        self.plugin_manager = PluginManager(config_manager=self.config, db=self.db, dp=self.dp)
        self.logger.info("PluginManager was loaded")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º PluginManager –≤ –∫–æ–Ω—Ñ–∏–≥ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –ø–ª–∞–≥–∏–Ω–∞–º–∏
        self.config.set_plugin_manager(self.plugin_manager)

        self.plugins = self.plugin_manager.load_all()

        # 6Ô∏è‚É£ –°—Ç–∞—Ä—Ç–æ–≤—ã–π —Ö–µ–Ω–¥–ª–µ—Ä
        self.start_handler = StartHandler(
            images=self.images,
            plugins=self.plugins,
            config=self.config
        )
        self.logger.info("StartHandler was loaded")

        # 7Ô∏è‚É£ –ú–µ–Ω–µ–¥–∂–µ—Ä –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–æ–±—ä–µ–¥–∏–Ω—è–µ–º Auth –∏ RBAC)
        self.auth_manager = AuthManager(self.config)
        self.logger.info("AuthManager was loaded")

        # 8Ô∏è‚É£ RBAC –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ AuthManager
        self.logger.info("RBACManager was loaded")

        # 9Ô∏è‚É£ –ú–µ–Ω–µ–¥–∂–µ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        self.stats_manager = StatsManager(self.config, self.db, self.plugin_manager)
        self.logger.info("StatsManager was loaded")

        # üîü –ú–µ–Ω–µ–¥–∂–µ—Ä –≤–µ—Ä—Å–∏–π
        self.version_manager = VersionManager()

    async def run(self):
        """
        –ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–æ—É—Ç–µ—Ä–æ–≤
        """
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã
        await self.db.init()
        self.logger.info("Database was initialized")

        try:
            await self.auth_manager.rbac.initialize_system()
            self.logger.info("RBAC system initialized")

            # –î–û–ë–ê–í–õ–Ø–ï–ú –û–¢–õ–ê–î–ö–£
            await self.auth_manager.rbac.debug_rbac_state()

        except Exception as e:
            self.logger.error(f"RBAC initialization failed: {e}")

        # Middleware
        self.dp.message.middleware(UserInitMiddleware())
        self.logger.info("Middlewares was initialized")

        # 1Ô∏è‚É£ –°–Ω–∞—á–∞–ª–∞ —Ä–æ—É—Ç–µ—Ä—ã –Ø–î–†–ê (–≤–∞–∂–Ω–æ!)
        self.dp.include_router(self.start_handler.get_router())

        # ErrorHandler
        from core.handlers.errors import ErrorHandler
        error_handler = ErrorHandler()
        self.dp.include_router(error_handler.get_router())
        self.logger.info("CoreRouters was initialized")

        # 2Ô∏è‚É£ –ó–∞—Ç–µ–º —Ä–æ—É—Ç–µ—Ä—ã –ü–õ–ê–ì–ò–ù–û–í
        for plugin in self.plugins.values():
            self.dp.include_router(plugin.get_router())
        self.logger.info("PluginRouters was initialized")

        # 3Ô∏è‚É£ –í –°–ê–ú–´–ô –ö–û–ù–ï–¶ Fallback
        from core.handlers.fallback import FallbackHandler
        fallback_handler = FallbackHandler()
        self.dp.include_router(fallback_handler.get_router())
        self.logger.info("FallbackRouter was initialized")

        # Polling
        self.logger.info(f"Bot {self.version_manager.title} v{self.version_manager.version} started successfull")
        await self.dp.start_polling(self.bot)
