from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from core.keyboards import KeyboardBuilderBase
from core.display.html_builder import HTMLBuilder
from .registry import FilterFSM


class FilterConfigurator:
    """
    –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä —Ñ–∏–ª—å—Ç—Ä–æ–≤ —á–µ—Ä–µ–∑ FSM
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: router - —Ä–æ—É—Ç–µ—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: —ç–∫–∑–µ–º–ø–ª—è—Ä FilterConfigurator
    –ü—Ä–∏–º–µ—Ä: configurator = FilterConfigurator(router)
    """

    def __init__(self, router: Router):
        self.router = router
        self._register_handlers()

    def _register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤"""
        self.router.message.register(self.start_filter_config, Command("configure_filters"))
        self.router.callback_query.register(self.handle_role_filter_setup, F.data == "configure_role_filter")
        self.router.message.register(self.handle_role_input, FilterFSM.awaiting_role_input)
        self.router.callback_query.register(self.cancel_configuration, F.data == "cancel_filter_config")

    async def start_filter_config(self, message: Message, state: FSMContext):
        """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤"""
        text = HTMLBuilder().title("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤", "‚öôÔ∏è").build()

        keyboard = (KeyboardBuilderBase()
                    .add_button("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å RoleFilter", "configure_role_filter")
                    .add_button("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å PermissionFilter", "configure_permission_filter")
                    .add_button("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å GroupFilter", "configure_group_filter")
                    .add_cancel())

        await message.answer(text, reply_markup=keyboard.build_markup())
        await state.set_state(FilterFSM.configuring_role_filter)

    async def handle_role_filter_setup(self, callback: CallbackQuery, state: FSMContext):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É RoleFilter"""
        text = HTMLBuilder().title("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ RoleFilter", "üë•").note(
            "–í–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ–±—É–µ–º—É—é —Ä–æ–ª—å (–Ω–∞–ø—Ä–∏–º–µ—Ä: admin, user, moderator)").build()

        keyboard = KeyboardBuilderBase().add_cancel()

        await callback.message.edit_text(text, reply_markup=keyboard.build_markup())
        await state.set_state(FilterFSM.awaiting_role_input)

    async def handle_role_input(self, message: Message, state: FSMContext):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ —Ä–æ–ª–∏ –¥–ª—è RoleFilter"""
        role = message.text.strip()
        await state.update_data(configured_role=role)
        text = (HTMLBuilder()
                .title("RoleFilter –Ω–∞—Å—Ç—Ä–æ–µ–Ω", "‚úÖ")
                .field("–†–æ–ª—å", role)
                .note("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤ –∫–æ–¥–µ: RoleFilter(user_manager, '–≤–∞—à–∞_—Ä–æ–ª—å')")
                .build())

        await message.answer(text)
        await state.clear()

    async def cancel_configuration(self, callback: CallbackQuery, state: FSMContext):
        """–û—Ç–º–µ–Ω—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Ñ–∏–ª—å—Ç—Ä–æ–≤"""
        await state.clear()
        await callback.message.edit_text("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –æ—Ç–º–µ–Ω–µ–Ω–∞")
